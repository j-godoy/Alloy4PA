package ar.uba.dc.config;

public class Config {

    // PARAMETERS FOR PARSING AND EXECUTING ALLOY MODELS
    public static int MAX_THREAD_NUMBER = 4;
    public static int QUERY_TIMEOUT_LIMIT_IN_SECS = 600;
    public static int QUERY_TIMEOUT_LIMIT_IN_SECS_COPY = 600;

    public static String OUTPUT_STATISTICS_PATH = "."; // Path folder where the statistics will be saved;

    //PARAMETERS FOR GENERATING ABSTRACTION
    public static boolean VERBOSE = false;
    public static boolean AVOID_MUST_CONSTRUCTOR = true;
    public static boolean AVOID_MUST_TAU = false;
    public static boolean AVOID_MUST_ALL = false; // WARN: If this is true, it should not be used with constraints
    public static boolean ALLOW_ADDRESS_0x0 = true;

    public static boolean OVERWRITE_SUBJECTS = true;
    

    // SUFFIX FOR FILE WHERE THE GRAPHVIZ NAMES OF STATES ARE SAVED
    // This file is generated by AlloyGenerator and used by AEPA and CEPA to
    // generate the graphviz files with meaningful names for states.
    // It is used only in mode EPA
    public static String SUFFIX_GRAPHVIZ_NAME_STATES = "_graphviz_names_states.txt";

    // Read parameters from the config.properties file
    static {
        try {
            java.util.Properties properties = new java.util.Properties();
            try (java.io.FileInputStream fis = new java.io.FileInputStream("config.properties")) {
                properties.load(fis);
            }

            MAX_THREAD_NUMBER = Integer.parseInt(properties.getProperty("max_thread_number", "4"));
            QUERY_TIMEOUT_LIMIT_IN_SECS = Integer.parseInt(properties.getProperty("query_timeout_limit_in_secs", "600"));
            QUERY_TIMEOUT_LIMIT_IN_SECS_COPY = QUERY_TIMEOUT_LIMIT_IN_SECS;
            VERBOSE = Boolean.parseBoolean(properties.getProperty("verbose", "false"));
            AVOID_MUST_CONSTRUCTOR = Boolean.parseBoolean(properties.getProperty("avoid_must_constructor", "true"));
            AVOID_MUST_TAU = Boolean.parseBoolean(properties.getProperty("avoid_must_tau", "false"));
            AVOID_MUST_ALL = Boolean.parseBoolean(properties.getProperty("avoid_must_all", "false"));
            ALLOW_ADDRESS_0x0 = Boolean.parseBoolean(properties.getProperty("allow_address_0x0", "true"));
            OUTPUT_STATISTICS_PATH = properties.getProperty("output_statistics_path", ".");
            OVERWRITE_SUBJECTS = Boolean.parseBoolean(properties.getProperty("overwrite_subjects", "true"));
            System.out.println("==============================================================");
            System.out.println("Configuration loaded successfully from config.properties");
            System.out.println("Max Thread Number: " + MAX_THREAD_NUMBER);
            System.out.println("Query Timeout Limit (secs): " + QUERY_TIMEOUT_LIMIT_IN_SECS);
            System.out.println("Verbose: " + VERBOSE);
            System.out.println("Avoid Must Constructor: " + AVOID_MUST_CONSTRUCTOR);
            System.out.println("Avoid Must Tau: " + AVOID_MUST_TAU);
            System.out.println("Avoid Must All: " + AVOID_MUST_ALL);
            System.out.println("Allow Address 0x0: " + ALLOW_ADDRESS_0x0);
            System.out.println("Output Statistics Path: " + OUTPUT_STATISTICS_PATH);
            System.out.println("Overwrite Subjects: " + OVERWRITE_SUBJECTS);
            System.out.println("==============================================================");


        } catch (Exception e) {
            System.err.println("Error loading config properties: " + e.getMessage());
        }
    }
}
